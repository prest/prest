name: test

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    environment: build
    container: golang:latest
    defaults:
      run:
        shell: bash
        working-directory: /__w/prest/prest
    env:
      PREST_PG_HOST: postgres
      PREST_PG_DATABASE: prest-test
      PREST_PG_USER: postgres
      PREST_PG_PASS: postgres
      PREST_PG_PORT: 5432
      PREST_SSL_MODE: disable
      PREST_CONF: /__w/prest/prest/testdata/prest.toml
      PREST_MIGRATIONS: /__w/prest/prest/testdata/migrations
      PREST_QUERIES_LOCATION: /__w/prest/prest/testdata/queries
      BE_CRASHER: 1
      DOCKER_CLI_EXPERIMENTAL: "enabled"
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: prest-test
          POSTGRES_PORT: 5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: setup docker
        run: |
          apt update && apt install sudo lsb-release -y
          apt install apt-transport-https ca-certificates curl software-properties-common -y
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
          apt update
          apt-cache policy docker-ce
          sudo apt install docker-ce -y

      - name: Install PostgreSQL client
        run: |
          apt-get update
          apt-get install -y postgresql-client

      - name: Setup Database
        env:
          PGPASSWORD: postgres
        run: |
          psql -h $PREST_PG_HOST -p $PREST_PG_PORT -U $PREST_PG_USER -c "DROP DATABASE IF EXISTS \"$PREST_PG_DATABASE\";"
          psql -h $PREST_PG_HOST -p $PREST_PG_PORT -U $PREST_PG_USER -c "CREATE DATABASE \"$PREST_PG_DATABASE\";"
          psql -h $PREST_PG_HOST -p $PREST_PG_PORT -U $PREST_PG_USER -d $PREST_PG_DATABASE -f ./testdata/schema.sql

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install Dependencies
        run: |
          echo "Installing DeepSource"
          sed -i 's/azure\.//' /etc/apt/sources.list
          apt-get update
          curl https://deepsource.io/cli | sh
          apt -y install gcc-multilib
          git config --global --add url."git@github.com:prest".insteadOf "https://github.com/prest"
          go get -v -d ./...
          go get -v github.com/inconshreveable/mousetrap
          go install github.com/mattn/goveralls@latest

      - name: pREST Test
        run: |
          env go run ./cmd/prestd/main.go migrate up
          env go test -race -covermode=atomic -coverprofile=./coverage.out ./...

      - name: Upload coverage
        uses: codecov/codecov-action@v2
        with:
          file: ./coverage.out
